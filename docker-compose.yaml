version: '3.3'

services:
  # MySQL database
  database:
    build:
      context: ./database
      dockerfile: Dockerfile
      args:
        MYSQL_TCP_PORT: ${MYSQL_TCP_PORT}

    ports:
      - ${MYSQL_TCP_PORT}:${MYSQL_TCP_PORT}
    expose:
      - ${MYSQL_TCP_PORT}
    volumes:
      - mysql:/var/lib/mysql
    env_file:
      - .env

    networks:
      network:
        ipv4_address: ${TOOLMASTER_DATABASE_IP}

    healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            interval: 10s
            timeout: 60s
            retries: 10
  
  # Tools service
  tools:
    depends_on:
      database:
        condition: service_healthy

    build:
      context: ./tools_service
      dockerfile: ./Dockerfile
      args:
        TOOLMASTER_TOOLS_SERVICE_PORT: ${TOOLMASTER_TOOLS_SERVICE_PORT}

    env_file:
      - .env

    ports:
      - "${TOOLMASTER_TOOLS_SERVICE_PORT}:${TOOLMASTER_TOOLS_SERVICE_PORT}"
    expose:
      - '${TOOLMASTER_TOOLS_SERVICE_PORT}'

    networks:
      - network

  # Users service
  users:
    depends_on:
      database:
        condition: service_healthy

    build:
      context: ./users_service
      dockerfile: ./Dockerfile
      args:
        TOOLMASTER_USERS_SERVICE_PORT: ${TOOLMASTER_USERS_SERVICE_PORT}

    env_file:
      - .env

    ports:
      - "${TOOLMASTER_USERS_SERVICE_PORT}:${TOOLMASTER_USERS_SERVICE_PORT}"
    expose:
      - '${TOOLMASTER_USERS_SERVICE_PORT}'

    networks:
      - network
  
  # Authentication service
  auth:
    depends_on:
      database:
        condition: service_healthy

    build:
      context: ./auth_service
      dockerfile: ./Dockerfile
      args:
        TOOLMASTER_AUTH_SERVICE_PORT: ${TOOLMASTER_AUTH_SERVICE_PORT}

    env_file:
      - .env

    ports:
      - "${TOOLMASTER_AUTH_SERVICE_PORT}:${TOOLMASTER_AUTH_SERVICE_PORT}"
    expose:
      - '${TOOLMASTER_AUTH_SERVICE_PORT}'

    networks:
      - network

volumes:
  mysql:

networks:
  network:
    ipam:
      driver: default
      config:
        - subnet: ${TOOLMASTER_NETWORK}
